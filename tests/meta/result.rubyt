--TEST--
Dottie::Result works as expected
--FILE--
require "../../lib/dottie"
require "../../lib/dottie/result/crash"
require "../../lib/dottie/result/expected_failure"
require "../../lib/dottie/result/failure"
require "../../lib/dottie/result/skipped"
require "../../lib/dottie/result/success"

def print_result(result)
  puts <<~TEXT
    test_name: #{result.test_name}
    directory: #{result.directory}
    success? #{result.success?}
    skipped? #{result.skipped?}
    expected_failure? #{result.expected_failure?}
    failure? #{result.failure?}
    crash? #{result.crash?}
  TEXT
end

puts "Can be a failure"
failure = Dottie::Result::Failure.new("a/b/c", "-", 1234, 5679)
print_result(failure)
puts "expected: #{failure.expected}"
puts "actual: #{failure.actual}"

puts "\nCan be successful"
print_result(Dottie::Result::Success.new("a/b/c", "-"))

puts "\nCan be skipped"
print_result(Dottie::Result::Skipped.new("a/b/c", "-"))

puts "\nCan be an expected failure"
print_result(Dottie::Result::ExpectedFailure.new("a/b/c", "-"))

puts "\nCan be a crash"
crash = Dottie::Result::Crash.new("a/b/c", "-", "bad things!")
print_result(crash)
puts "exception: #{crash.exception}"
--EXPECT--
Can be a failure
test_name: -
directory: a/b/c
success? false
skipped? false
expected_failure? false
failure? true
crash? false
expected: 1234
actual: 5679

Can be successful
test_name: -
directory: a/b/c
success? true
skipped? false
expected_failure? false
failure? false
crash? false

Can be skipped
test_name: -
directory: a/b/c
success? false
skipped? true
expected_failure? false
failure? false
crash? false

Can be an expected failure
test_name: -
directory: a/b/c
success? false
skipped? false
expected_failure? true
failure? false
crash? false

Can be a crash
test_name: -
directory: a/b/c
success? false
skipped? false
expected_failure? false
failure? true
crash? true
exception: bad things!
